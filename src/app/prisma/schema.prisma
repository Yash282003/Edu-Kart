// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql" 
  url      = env("DATABASE_URL") 
}

model Principal {
  id         Int       @id @default(autoincrement())
  email      String    @unique
  password   String
  name       String
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  teachers   Teacher[]
  students   Student[]
  classrooms Classroom[]
}

model Teacher {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  password    String
  name        String
  principal   Principal   @relation(fields: [principalId], references: [id])
  principalId Int
  classrooms  Classroom[]
  students    Student[]
}

model Student {
  id           Int                @id @default(autoincrement())
  email        String             @unique
  password     String
  name         String
  createdAt    DateTime           @default(now())
  updatedAt    DateTime           @updatedAt
  principal    Principal          @relation(fields: [principalId], references: [id])
  principalId  Int
  teacher      Teacher?           @relation(fields: [teacherId], references: [id])
  teacherId    Int?
  classrooms   StudentClassroom[] // Many-to-many relation via StudentClassroom
}

model Classroom {
  id           Int                @id @default(autoincrement())
  subject      String
  description  String
  teacher      Teacher            @relation(fields: [teacherId], references: [id])
  teacherId    Int
  principal    Principal          @relation(fields: [principalId], references: [id])
  principalId  Int
  students     StudentClassroom[] // Many-to-many relation via StudentClassroom
}

model StudentClassroom {
  id           Int       @id @default(autoincrement())
  student      Student   @relation(fields: [studentId], references: [id])
  studentId    Int
  classroom    Classroom @relation(fields: [classroomId], references: [id])
  classroomId  Int

  @@unique([studentId, classroomId]) // Ensure the pair is unique
}


